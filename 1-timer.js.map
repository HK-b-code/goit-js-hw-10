{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateInput = document.querySelector('#datetime-picker');\nconst timerFields = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet selectedTime = null;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      selectedTime = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateInput, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  return {\n    days: Math.floor(ms / day),\n    hours: Math.floor((ms % day) / hour),\n    minutes: Math.floor(((ms % day) % hour) / minute),\n    seconds: Math.floor((((ms % day) % hour) % minute) / second),\n  };\n}\n\nfunction startTimer() {\n  timerId = setInterval(() => {\n    const diff = selectedTime - new Date();\n    if (diff <= 0) {\n      clearInterval(timerId);\n      iziToast.success({ title: 'Done', message: 'Countdown finished!' });\n      return;\n    }\n    const { days, hours, minutes, seconds } = convertMs(diff);\n    timerFields.days.textContent = String(days).padStart(2, '0');\n    timerFields.hours.textContent = String(hours).padStart(2, '0');\n    timerFields.minutes.textContent = String(minutes).padStart(2, '0');\n    timerFields.seconds.textContent = String(seconds).padStart(2, '0');\n  }, 1000);\n\n  startBtn.disabled = true;\n  dateInput.disabled = true;\n}\n\nstartBtn.addEventListener('click', startTimer);\n"],"names":["startBtn","dateInput","timerFields","selectedTime","timerId","options","selectedDates","iziToast","flatpickr","convertMs","ms","startTimer","diff","days","hours","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAe,KACfC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBA,EAAc,CAAC,GAAK,IAAI,MAC1BC,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDP,EAAS,SAAW,KAEpBG,EAAeG,EAAc,CAAC,EAC9BN,EAAS,SAAW,GAEvB,CACH,EAEAQ,EAAUP,EAAWI,CAAO,EAE5B,SAASI,EAAUC,EAAI,CAMrB,MAAO,CACL,KAAM,KAAK,MAAMA,EAAK,KAAG,EACzB,MAAO,KAAK,MAAOA,EAAK,MAAO,IAAI,EACnC,QAAS,KAAK,MAAQA,EAAK,MAAO,KAAQ,GAAM,EAChD,QAAS,KAAK,MAASA,EAAK,MAAO,KAAQ,IAAU,GAAM,CAC/D,CACA,CAEA,SAASC,GAAa,CACpBP,EAAU,YAAY,IAAM,CAC1B,MAAMQ,EAAOT,EAAe,IAAI,KAChC,GAAIS,GAAQ,EAAG,CACb,cAAcR,CAAO,EACrBG,EAAS,QAAQ,CAAE,MAAO,OAAQ,QAAS,qBAAqB,CAAE,EAClE,MACD,CACD,KAAM,CAAE,KAAAM,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYP,EAAUG,CAAI,EACxDV,EAAY,KAAK,YAAc,OAAOW,CAAI,EAAE,SAAS,EAAG,GAAG,EAC3DX,EAAY,MAAM,YAAc,OAAOY,CAAK,EAAE,SAAS,EAAG,GAAG,EAC7DZ,EAAY,QAAQ,YAAc,OAAOa,CAAO,EAAE,SAAS,EAAG,GAAG,EACjEb,EAAY,QAAQ,YAAc,OAAOc,CAAO,EAAE,SAAS,EAAG,GAAG,CAClE,EAAE,GAAI,EAEPhB,EAAS,SAAW,GACpBC,EAAU,SAAW,EACvB,CAEAD,EAAS,iBAAiB,QAASW,CAAU"}